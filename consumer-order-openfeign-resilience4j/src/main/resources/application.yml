server:
  port: ${SERVER_PORT:80}
spring:
  application:
    name: order-openfeign-resilience4j-service
  mvc:
    converters:
      preferred-json-mapper: gson

logging:
  level:
    com.enix.consumer.feignClient.PaymentFeignClient: debug

# 這一個設定是自行加上的
feign-client:
  # 對應 FeignClient 中自定的服務名稱
  payment-service-host-name: ${PAYMENT_SERVICE_HOST_NAME:PAYMENT-SERVICE}


eureka:
  client:
    # 需要將其註冊服務，預設開，不要註冊的時候 False 即可
    register-with-eureka: true
    # 是否要從 Eureka Server 取得服務註冊訊息，這是要配合負載均衡用的，單節點之下可以關閉
    fetch-registry: true
    service-url:
      # 所有服務的註冊與查詢用 URL 設定
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL:http://localhost-one:7001/eureka,http://localhost-two:7002/eureka}
  instance:
    # 修改顯示的主機名稱
    instance-id: ${EUREKA_INSTANCE_ID:order_80}
    # 於頁面中 Link 顯示實際 IP 位置，而非 Domain
    prefer-ip-address: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 50
    instances:
      order-breaker-1:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
      order-breaker-2:
        # 故障率限制，超過則啟動，預設 50
        failure-rate-threshold: 20
        # 預設 100，單位要看下面 Type 是什麼，Type 預設是時間
        sliding-window-size: 5
        sliding-window-type: TIME_BASED
        # 熔斷器關閉時，要多少次調用才能進入半開狀態，預設 100
        minimum-number-of-calls: 5
        # 熔斷器打開之後，多久會進入半開狀態，預設 60 秒
        wait-duration-in-open-state: 30s
        # 緩衝區，預設 100
        event-consumer-buffer-size: 5
        # 半開狀態時，最大調用次數，預設 10
        permitted-number-of-calls-in-half-open-state: 2
        record-exceptions:
          - java.lang.Exception

# 監控
management:
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    sampling:
      # 取樣率 0 ~ 1 ， 1 最大 (最耗性能)，預設 0.1
      probability: 1
  zipkin:
    tracing:
      endpoint:  "${ZIPKIN_URL:http://localhost:9411}/api/v2/spans"