plugins {
    id "org.springframework.boot"
    id "io.spring.dependency-management"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.jetbrains.kotlin.plugin.allopen"
    id "org.jetbrains.kotlin.plugin.jpa"
}

group = 'com.enix.provider'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Common Library
    implementation project(':common')
    // kotlin-log
    implementation "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}"
    // Develop tool
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web', {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-json'
    }
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Eureka Client
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudEurekaVersion}"

    // Test
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // Micrometer Tracing
    implementation "io.micrometer:micrometer-tracing:${micrometerVersion}"
    implementation "io.micrometer:micrometer-tracing-bridge-brave:${micrometerVersion}"
    implementation "io.zipkin.reporter2:zipkin-reporter-brave:${zipkinReporterBraveVersion}"

}